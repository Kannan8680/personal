Ex. No.: 5

System Calls Programming
Aim: To experiment system calls using fork(), execlp() and pid() functions.

// Filename: syscalls.c

#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>

int main() {
    pid_t pid;

    pid = fork(); // Create child process

    if (pid < 0) {
        perror("Fork failed");
        return 1;
    }
    else if (pid == 0) {
        // Child process
        printf("Child Process:\n");
        printf("Child PID: %d\n", getpid());
        printf("Parent PID: %d\n", getppid());

        // Replace child process with `ls -l`
        execlp("ls", "ls", "-l", NULL);
        
        // If execlp fails
        perror("execlp failed");
    }
    else {
        // Parent process
        printf("Parent Process:\n");
        printf("Parent PID: %d\n", getpid());
        printf("Child PID from parent: %d\n", pid);
    }

    return 0;
}

run :
$ gcc syscalls.c -o syscalls
$ ./syscalls
